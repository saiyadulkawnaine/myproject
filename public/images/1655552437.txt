 public function getPrPdf()
 {
  $paymode = config('bprs.paymode');
  $id = request('id', 0);
  $designation = array_prepend(array_pluck($this->designation->get(), 'name', 'id'), ' ', '');
  $rows = $this->invpurreq
   ->join('companies', function ($join) {
    $join->on('companies.id', '=', 'inv_pur_reqs.company_id');
   })
   ->join('currencies', function ($join) {
    $join->on('currencies.id', '=', 'inv_pur_reqs.currency_id');
   })
   ->join('users', function ($join) {
    $join->on('users.id', '=', 'inv_pur_reqs.created_by');
   })
   ->leftJoin('users as updated_user', function ($join) {
    $join->on('updated_user.id', '=', 'inv_pur_reqs.updated_by');
   })

   ->leftJoin('users as demand_user', function ($join) {
    $join->on('demand_user.id', '=', 'inv_pur_reqs.demand_by_id');
   })
   ->leftJoin('employee_h_rs', function ($join) {
    $join->on('demand_user.id', '=', 'employee_h_rs.user_id');
   })

   ->leftJoin('users as price_varify_user', function ($join) {
    $join->on('price_varify_user.id', '=', 'inv_pur_reqs.price_verified_by_id');
   })
   ->leftJoin('employee_h_rs as varify_emp', function ($join) {
    $join->on('price_varify_user.id', '=', 'varify_emp.user_id');
   })

   ->leftJoin('users as first_approval', function ($join) {
    $join->on('first_approval.id', '=', 'inv_pur_reqs.first_approved_by');
   })
   ->leftJoin('employee_h_rs as first_approval_emp', function ($join) {
    $join->on('first_approval.id', '=', 'first_approval_emp.user_id');
   })
   ->leftJoin('users as second_approval', function ($join) {
    $join->on('second_approval.id', '=', 'inv_pur_reqs.second_approved_by');
   })
   ->leftJoin('users as third_approval', function ($join) {
    $join->on('third_approval.id', '=', 'inv_pur_reqs.third_approved_by');
   })
   ->leftJoin('users as final_approval', function ($join) {
    $join->on('final_approval.id', '=', 'inv_pur_reqs.final_approved_by');
   })
   ->where([['inv_pur_reqs.id', '=', $id]])
   ->get([
    'inv_pur_reqs.*',
    'companies.id as company_id',
    'companies.name as company_name',
    'currencies.code as currency_name',
    'users.name as user_name',
    'updated_user.name as update_user_name',
    'employee_h_rs.name as demand_user_name',
    'employee_h_rs.contact as demand_contact',
    'employee_h_rs.designation_id as dd_designation',
    'varify_emp.name as price_varify_user_name',
    'varify_emp.contact as price_varify_user_contact',
    'varify_emp.designation_id as pv_designation',
    'demand_user.signature_file as demand_user_signature',
    'price_varify_user.signature_file as price_varify_signature',

    'first_approval.name as first_approval_name',
    'first_approval.signature_file as first_approval_signature',
    'first_approval_emp.name as first_approval_emp_name',
    'first_approval_emp.contact as first_approval_emp_contact',
    'first_approval_emp.designation_id as first_approval_emp_designation',

    'second_approval.name as second_approval_name',
    'second_approval.signature_file as second_approval_signature',
    'third_approval.name as third_approval_name',
    'third_approval.signature_file as third_approval_signature',
    'final_approval.name as final_approval_name',
    'final_approval.signature_file as final_approval_signature',
   ]);

  foreach ($rows as $row) {
   $invpurreq['id'] = $row->id;
   $invpurreq['requisition_no'] = $row->requisition_no;
   $invpurreq['requisition_type_id'] = $row->requisition_type_id;
   $invpurreq['company_id'] = $row->company_id;
   $invpurreq['req_date'] = date('d-M-Y', strtotime($row->req_date));
   $invpurreq['delivery_by'] = ($row->delivery_by !== null) ? date('d-M-Y', strtotime($row->delivery_by)) : null;
   $invpurreq['demand_by'] = $row->demand_by;
   $invpurreq['pay_mode'] = isset($paymode[$row->pay_mode]) ? $paymode[$row->pay_mode] : '';
   $invpurreq['currency_name'] = $row->currency_name;
   //$invpurreq['location_id']=isset($location[$row->location_id])?$location[$row->location_id]:'';
   $invpurreq['remarks'] = $row->remarks;
   $invpurreq['user_name'] = $row->user_name;
   $invpurreq['created_at'] = date('d-M-Y', strtotime($row->created_at));

   $created_at = strtotime($row->created_at);
   $updated_at = strtotime($row->updated_at);
   if ($created_at == $updated_at) {
    $invpurreq['update_user_name'] = '';
    $invpurreq['updated_at'] = '';
   } else {
    $invpurreq['update_user_name'] = $row->update_user_name;
    $invpurreq['updated_at'] = date('d-M-Y', strtotime($row->updated_at));
   }

   $invpurreq['demand_user_name'] = $row->demand_user_name;
   $invpurreq['demand_contact'] = $row->demand_contact;
   $invpurreq['price_varify_user_name'] = $row->price_varify_user_name;
   $invpurreq['price_varify_user_contact'] = $row->price_varify_user_contact;
   $invpurreq['dd_designation'] = $designation[$row->dd_designation];
   $invpurreq['pv_designation'] = $designation[$row->pv_designation];

   $invpurreq['first_approval_name'] = $row->first_approval_name;
   $invpurreq['first_approval_emp_name'] = $row->first_approval_emp_name;
   $invpurreq['first_approval_emp_contact'] = $row->first_approval_emp_contact;
   $invpurreq['first_approval_emp_designation'] = $designation[$row->first_approval_emp_designation];

   $invpurreq['second_approval_name'] = $row->second_approval_name;
   $invpurreq['third_approval_name'] = $row->third_approval_name;
   $invpurreq['final_approval_name'] = $row->final_approval_name;

   $invpurreq['first_approved_at'] = $row->first_approved_at ? date('d-M-Y', strtotime($row->first_approved_at)) : '';
   $invpurreq['second_approved_at'] = $row->second_approved_at ? date('d-M-Y', strtotime($row->second_approved_at)) : '';
   $invpurreq['third_approved_at'] = $row->third_approved_at ? date('d-M-Y', strtotime($row->third_approved_at)) : '';
   $invpurreq['final_approved_at'] = $row->final_approved_at ? date('d-M-Y', strtotime($row->final_approved_at)) : '';

   $invpurreq['demand_user_signature'] = $row->demand_user_signature ? 'images/signature/' . $row->demand_user_signature : null;
   $invpurreq['price_varify_signature'] = $row->price_varify_signature ? 'images/signature/' . $row->price_varify_signature : null;

   $invpurreq['first_approval_signature'] = $row->first_approval_signature ? 'images/signature/' . $row->first_approval_signature : null;
   $invpurreq['second_approval_signature'] = $row->second_approval_signature ? 'images/signature/' . $row->second_approval_signature : null;
   $invpurreq['third_approval_signature'] = $row->third_approval_signature ? 'images/signature/' . $row->third_approval_signature : null;
   $invpurreq['final_approval_signature'] = $row->final_approval_signature ? 'images/signature/' . $row->final_approval_signature : null;
  }

  $company = $this->company->where([['id', '=', $invpurreq['company_id']]])->get()->first();
  $companyid = $company->id;

  $invpurreqitem = $this->invpurreq
   ->selectRaw('
            inv_pur_reqs.id as inv_pur_req_id,
            inv_pur_reqs.currency_id,
            inv_pur_req_items.id,
            inv_pur_req_items.item_account_id,
            inv_pur_req_items.department_id,   
            inv_pur_req_items.remarks as item_remarks,        
            item_accounts.item_description,
            item_accounts.sub_class_name,
            item_accounts.specification,
            item_accounts.uom_id,
            item_accounts.reorder_level,
            itemcategories.name as itemcategory_name,
            departments.name as department_name,           
            uoms.code as uom_code,
            sum(inv_pur_req_items.qty) as item_qty,   
            avg(inv_pur_req_items.rate) as item_rate,
            sum(inv_pur_req_items.amount) as item_amount,
            max_req_dt.req_date,
            max_req_no.requisition_no,
            max_req_qty.last_qty,
            stockgn.qty as general_stock_qty,
            stockdc.qty as dye_chem_stock_qty,
            max_rcv_no_gn.receive_no as max_receive_no_gn,
            max_rcv_sup_gn.code as supplier_name_gn,
            max_rcv_dt_gn.receive_date as max_receive_date_gn,
            max_rcv_qty_gn.qty as rcv_qty_gn,
            max_rcv_qty_gn.rate as rcv_rate_gn,

            max_rcv_no_dc.receive_no as max_receive_no_dc,
            max_rcv_sup_dc.code as supplier_name_dc,
            max_rcv_dt_dc.receive_date as max_receive_date_dc,
            max_rcv_qty_dc.qty as rcv_qty_dc,
            max_rcv_qty_dc.rate as rcv_rate_dc
        ')
   ->join('inv_pur_req_items', function ($join) {
    $join->on('inv_pur_reqs.id', '=', 'inv_pur_req_items.inv_pur_req_id');
   })
   ->join('item_accounts', function ($join) {
    $join->on('item_accounts.id', '=', 'inv_pur_req_items.item_account_id');
   })
   ->leftJoin('itemclasses', function ($join) {
    $join->on('itemclasses.id', '=', 'item_accounts.itemclass_id');
   })
   ->leftJoin('itemcategories', function ($join) {
    $join->on('itemcategories.id', '=', 'itemclasses.itemcategory_id');
   })
   ->leftJoin('uoms', function ($join) {
    $join->on('uoms.id', '=', 'item_accounts.uom_id');
   })
   ->leftJoin('departments', function ($join) {
    $join->on('departments.id', '=', 'inv_pur_req_items.department_id');
   })

   ->leftJoin(\DB::raw(
    "(
            select 
            
            inv_pur_req_items.item_account_id,
            max(inv_pur_reqs.req_date) as req_date
            from inv_pur_reqs
            join inv_pur_req_items on inv_pur_req_items.inv_pur_req_id=inv_pur_reqs.id
            where 
            inv_pur_reqs.id < " . $id . " 
            and inv_pur_reqs.company_id =" . $companyid . " 
            and inv_pur_reqs.deleted_at is null
            and inv_pur_req_items.deleted_at is null
            group by 
            
            inv_pur_req_items.item_account_id
            ) max_req_dt"
   ), "max_req_dt.item_account_id", "=", "item_accounts.id")
   ->leftJoin(\DB::raw(
    "(
            select 
            
            inv_pur_req_items.item_account_id,
            inv_pur_reqs.req_date,
            max(inv_pur_reqs.requisition_no) as requisition_no
            from inv_pur_reqs
            join inv_pur_req_items on inv_pur_req_items.inv_pur_req_id=inv_pur_reqs.id
            where
            inv_pur_reqs.id < " . $id . " 
            and inv_pur_reqs.company_id =" . $companyid . "
            and inv_pur_reqs.deleted_at is null
            and inv_pur_req_items.deleted_at is null
            group by 
            
            inv_pur_reqs.req_date,
            inv_pur_req_items.item_account_id
            ) max_req_no"
   ), [["max_req_no.req_date", "=", "max_req_dt.req_date"], ["max_req_no.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw(
    "(
            select 
            
            inv_pur_req_items.item_account_id,
            inv_pur_reqs.req_date,
            max(inv_pur_req_items.qty) as last_qty
            from inv_pur_reqs
            join inv_pur_req_items on inv_pur_req_items.inv_pur_req_id=inv_pur_reqs.id
            where 
            inv_pur_reqs.id < " . $id . "
            and inv_pur_reqs.company_id =" . $companyid . "
            and inv_pur_reqs.deleted_at is null
            and inv_pur_req_items.deleted_at is null
            group by 
            
            inv_pur_reqs.req_date,
            inv_pur_req_items.item_account_id
            ) max_req_qty"
   ), [["max_req_qty.req_date", "=", "max_req_dt.req_date"], ["max_req_qty.item_account_id", "=", "item_accounts.id"]])
   ->leftJoin(\DB::raw("(SELECT 
          inv_general_transactions.item_account_id,
          sum(inv_general_transactions.store_qty) as qty 
          FROM inv_general_transactions 
          where  inv_general_transactions.deleted_at is null
          and inv_general_transactions.company_id =" . $companyid . "
          group by inv_general_transactions.item_account_id
        ) stockgn"), "stockgn.item_account_id", "=", "item_accounts.id")
   ->leftJoin(\DB::raw("(SELECT 
          inv_dye_chem_transactions.item_account_id,
          sum(inv_dye_chem_transactions.store_qty) as qty 
          FROM inv_dye_chem_transactions 
          where  inv_dye_chem_transactions.deleted_at is null
          and inv_dye_chem_transactions.company_id =" . $companyid . "
          group by inv_dye_chem_transactions.item_account_id
        ) stockdc"), "stockdc.item_account_id", "=", "item_accounts.id")

   ->leftJoin(\DB::raw("(
        select 
        inv_general_rcv_items.item_account_id,
        max(inv_rcvs.receive_date) as receive_date
        from inv_general_rcv_items
        join inv_general_transactions on inv_general_transactions.inv_general_rcv_item_id=inv_general_rcv_items.id
        join inv_general_rcvs on inv_general_rcvs.id=inv_general_rcv_items.inv_general_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_general_rcvs.inv_rcv_id
        where 
        inv_rcvs.receive_basis_id in (1,2,3)
        and inv_general_transactions.deleted_at is null
        and inv_general_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_general_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by inv_general_rcv_items.item_account_id
        ) max_rcv_dt_gn"), "max_rcv_dt_gn.item_account_id", "=", "item_accounts.id")

   ->leftJoin(\DB::raw("(
        select 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.receive_date,
        max(inv_rcvs.id) as id
        from inv_general_rcv_items
        join inv_general_transactions on inv_general_transactions.inv_general_rcv_item_id=inv_general_rcv_items.id
        join inv_general_rcvs on inv_general_rcvs.id=inv_general_rcv_items.inv_general_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_general_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_general_transactions.deleted_at is null
        and inv_general_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_general_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.receive_date
        ) max_rcv_id_gn"), [["max_rcv_id_gn.receive_date", "=", "max_rcv_dt_gn.receive_date"], ["max_rcv_id_gn.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id,
        max(inv_rcvs.receive_no) as receive_no
        from inv_general_rcv_items
        join inv_general_transactions on inv_general_transactions.inv_general_rcv_item_id=inv_general_rcv_items.id
        join inv_general_rcvs on inv_general_rcvs.id=inv_general_rcv_items.inv_general_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_general_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_general_transactions.deleted_at is null
        and inv_general_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_general_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id
        ) max_rcv_no_gn"), [["max_rcv_no_gn.id", "=", "max_rcv_id_gn.id"], ["max_rcv_no_gn.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id,
        suppliers.code
        from inv_general_rcv_items
        join inv_general_transactions on inv_general_transactions.inv_general_rcv_item_id=inv_general_rcv_items.id
        join inv_general_rcvs on inv_general_rcvs.id=inv_general_rcv_items.inv_general_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_general_rcvs.inv_rcv_id
        join suppliers on suppliers.id=inv_rcvs.supplier_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_general_transactions.deleted_at is null
        and inv_general_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_general_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id,
        suppliers.code
        ) max_rcv_sup_gn"), [["max_rcv_sup_gn.id", "=", "max_rcv_id_gn.id"], ["max_rcv_sup_gn.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id,
        sum(inv_general_transactions.store_qty) as qty,
        avg(inv_general_transactions.store_rate) as rate
        from inv_general_rcv_items
        join inv_general_transactions on inv_general_transactions.inv_general_rcv_item_id=inv_general_rcv_items.id
        join inv_general_rcvs on inv_general_rcvs.id=inv_general_rcv_items.inv_general_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_general_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_general_transactions.deleted_at is null
        and inv_general_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_general_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_general_rcv_items.item_account_id,
        inv_rcvs.id

        ) max_rcv_qty_gn"), [["max_rcv_qty_gn.id", "=", "max_rcv_id_gn.id"], ["max_rcv_qty_gn.item_account_id", "=", "item_accounts.id"]])


   ->leftJoin(\DB::raw("(
        select 
        inv_dye_chem_rcv_items.item_account_id,
        max(inv_rcvs.receive_date) as receive_date
        from inv_dye_chem_rcv_items
        join inv_dye_chem_transactions on inv_dye_chem_transactions.inv_dye_chem_rcv_item_id=inv_dye_chem_rcv_items.id
        join inv_dye_chem_rcvs on inv_dye_chem_rcvs.id=inv_dye_chem_rcv_items.inv_dye_chem_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_dye_chem_rcvs.inv_rcv_id
        where 
        inv_rcvs.receive_basis_id in (1,2,3)
        and inv_dye_chem_transactions.deleted_at is null
        and inv_dye_chem_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_dye_chem_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by inv_dye_chem_rcv_items.item_account_id
        ) max_rcv_dt_dc"), "max_rcv_dt_dc.item_account_id", "=", "item_accounts.id")

   ->leftJoin(\DB::raw("(
        select 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.receive_date,
        max(inv_rcvs.id) as id
        from inv_dye_chem_rcv_items
        join inv_dye_chem_transactions on inv_dye_chem_transactions.inv_dye_chem_rcv_item_id=inv_dye_chem_rcv_items.id
        join inv_dye_chem_rcvs on inv_dye_chem_rcvs.id=inv_dye_chem_rcv_items.inv_dye_chem_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_dye_chem_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_dye_chem_transactions.deleted_at is null
        and inv_dye_chem_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_dye_chem_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.receive_date
        ) max_rcv_id_dc"), [["max_rcv_id_dc.receive_date", "=", "max_rcv_dt_dc.receive_date"], ["max_rcv_id_dc.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id,
        max(inv_rcvs.receive_no) as receive_no
        from inv_dye_chem_rcv_items
        join inv_dye_chem_transactions on inv_dye_chem_transactions.inv_dye_chem_rcv_item_id=inv_dye_chem_rcv_items.id
        join inv_dye_chem_rcvs on inv_dye_chem_rcvs.id=inv_dye_chem_rcv_items.inv_dye_chem_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_dye_chem_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_dye_chem_transactions.deleted_at is null
        and inv_dye_chem_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_dye_chem_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id
        ) max_rcv_no_dc"), [["max_rcv_no_dc.id", "=", "max_rcv_id_dc.id"], ["max_rcv_no_dc.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id,
        suppliers.code
        from inv_dye_chem_rcv_items
        join inv_dye_chem_transactions on inv_dye_chem_transactions.inv_dye_chem_rcv_item_id=inv_dye_chem_rcv_items.id
        join inv_dye_chem_rcvs on inv_dye_chem_rcvs.id=inv_dye_chem_rcv_items.inv_dye_chem_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_dye_chem_rcvs.inv_rcv_id
        join suppliers on suppliers.id=inv_rcvs.supplier_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_dye_chem_transactions.deleted_at is null
        and inv_dye_chem_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_dye_chem_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id,
        suppliers.code
        ) max_rcv_sup_dc"), [["max_rcv_sup_dc.id", "=", "max_rcv_id_dc.id"], ["max_rcv_sup_dc.item_account_id", "=", "item_accounts.id"]])

   ->leftJoin(\DB::raw("(
        select 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id,
        sum(inv_dye_chem_transactions.store_qty) as qty,
        avg(inv_dye_chem_transactions.store_rate) as rate
        from inv_dye_chem_rcv_items
        join inv_dye_chem_transactions on inv_dye_chem_transactions.inv_dye_chem_rcv_item_id=inv_dye_chem_rcv_items.id
        join inv_dye_chem_rcvs on inv_dye_chem_rcvs.id=inv_dye_chem_rcv_items.inv_dye_chem_rcv_id
        join inv_rcvs on inv_rcvs.id=inv_dye_chem_rcvs.inv_rcv_id
        where  inv_rcvs.receive_basis_id in (1,2,3)
        and inv_dye_chem_transactions.deleted_at is null
        and inv_dye_chem_rcv_items.deleted_at is null
        and inv_rcvs.deleted_at is null
        and inv_dye_chem_transactions.trans_type_id=1
        and inv_rcvs.company_id =" . $companyid . "
        group by 
        inv_dye_chem_rcv_items.item_account_id,
        inv_rcvs.id

        ) max_rcv_qty_dc"), [["max_rcv_qty_dc.id", "=", "max_rcv_id_dc.id"], ["max_rcv_qty_dc.item_account_id", "=", "item_accounts.id"]])




   ->where([['inv_pur_reqs.id', '=', $id]])
   ->orderBy('inv_pur_req_items.id', 'asc')
   ->groupBy([
    'inv_pur_reqs.id',
    'inv_pur_reqs.currency_id',
    'inv_pur_req_items.id',
    'inv_pur_req_items.item_account_id',
    'inv_pur_req_items.department_id',
    'inv_pur_req_items.remarks',
    'item_accounts.item_description',
    'item_accounts.sub_class_name',
    'item_accounts.specification',
    'item_accounts.uom_id',
    'item_accounts.reorder_level',
    'itemcategories.name',
    'departments.name',
    'uoms.code',
    'max_req_dt.req_date',
    'max_req_no.requisition_no',
    'max_req_qty.last_qty',
    'stockgn.qty',
    'stockdc.qty',
    'max_rcv_no_gn.receive_no',
    'max_rcv_sup_gn.code',
    'max_rcv_dt_gn.receive_date',
    'max_rcv_qty_gn.qty',
    'max_rcv_qty_gn.rate',

    'max_rcv_no_dc.receive_no',
    'max_rcv_sup_dc.code',
    'max_rcv_dt_dc.receive_date',
    'max_rcv_qty_dc.qty',
    'max_rcv_qty_dc.rate'
   ])
   ->get()
   ->map(function ($invpurreqitem) {
    $invpurreqitem->currency_name = $invpurreqitem->currency_name;
    $invpurreqitem->item_description = $invpurreqitem->sub_class_name . ", " . $invpurreqitem->item_description . ", " . $invpurreqitem->specification;
    $invpurreqitem->req_date = '';
    if ($invpurreqitem->req_date) {
     $invpurreqitem->req_date = date('d-M-Y', strtotime($invpurreqitem->req_date));
    }
    $invpurreqitem->last_qty = number_format($invpurreqitem->last_qty, 2);
    $invpurreqitem->stock_qty = $invpurreqitem->general_stock_qty ? number_format($invpurreqitem->general_stock_qty, 2) : number_format($invpurreqitem->dye_chem_stock_qty, 2);

    $invpurreqitem->receive_no = $invpurreqitem->max_receive_no_gn ? $invpurreqitem->max_receive_no_gn : $invpurreqitem->max_receive_no_dc;
    $invpurreqitem->supplier_name = $invpurreqitem->supplier_name_gn ? $invpurreqitem->supplier_name_gn : $invpurreqitem->supplier_name_dc;

    $invpurreqitem->receive_date = '';
    if ($invpurreqitem->max_receive_date_gn) {
     $invpurreqitem->receive_date = date('d-M-Y', strtotime($invpurreqitem->max_receive_date_gn));
    }
    if ($invpurreqitem->max_receive_date_dc) {
     $invpurreqitem->receive_date = date('d-M-Y', strtotime($invpurreqitem->max_receive_date_dc));
    }

    $invpurreqitem->receive_qty = $invpurreqitem->rcv_qty_gn ? number_format($invpurreqitem->rcv_qty_gn, 2) : number_format($invpurreqitem->rcv_qty_dc, 2);
    $invpurreqitem->receive_rate = $invpurreqitem->rcv_rate_gn ? number_format($invpurreqitem->rcv_rate_gn, 2) : number_format($invpurreqitem->rcv_rate_dc, 2);


    //$invpurreqitem->supplier_name=$invpurreqitem->supplier_name_gn?$invpurreqitem->supplier_name_gn:$invpurreqitem->supplier_name_dc,
    return $invpurreqitem;
   });

  $reason = array_prepend(config('bprs.reason'), '-Select-', '');
  $decision = array_prepend(config('bprs.decision'), '-Select-', '');

  $invpurreqassetbreakdown = $this->invpurreq
   ->join('inv_pur_req_asset_breakdowns', function ($join) {
    $join->on('inv_pur_reqs.id', '=', 'inv_pur_req_asset_breakdowns.inv_pur_req_id');
   })
   ->join('asset_breakdowns', function ($join) {
    $join->on('asset_breakdowns.id', '=', 'inv_pur_req_asset_breakdowns.asset_breakdown_id');
   })
   ->join('asset_quantity_costs', function ($join) {
    $join->on('asset_quantity_costs.id', '=', 'asset_breakdowns.asset_quantity_cost_id');
   })
   ->join('asset_acquisitions', function ($join) {
    $join->on('asset_acquisitions.id', '=', 'asset_quantity_costs.asset_acquisition_id');
   })
   ->where([['inv_pur_reqs.id', '=', $id]])
   ->orderBy('inv_pur_req_asset_breakdowns.id', 'desc')
   ->get([
    'inv_pur_req_asset_breakdowns.id as inv_pur_req_asset_breakdown_id',
    'asset_breakdowns.id as asset_breakdown_id',
    'asset_breakdowns.reason_id',
    'asset_breakdowns.decision_id',
    'asset_breakdowns.breakdown_at',
    'asset_breakdowns.remarks',
    'asset_quantity_costs.custom_no',
    'asset_acquisitions.name as asset_name',
    'asset_acquisitions.asset_group',
    'asset_acquisitions.brand',
    'asset_acquisitions.origin'
   ])
   ->map(function ($invpurreqassetbreakdown) use ($reason, $decision) {
    $invpurreqassetbreakdown->asset_name = $invpurreqassetbreakdown->asset_name . ", " . $invpurreqassetbreakdown->asset_group . ", " . $invpurreqassetbreakdown->brand . ", " . $invpurreqassetbreakdown->origin;
    $invpurreqassetbreakdown->reason = isset($reason[$invpurreqassetbreakdown->reason_id]) ? $reason[$invpurreqassetbreakdown->reason_id] : '';
    $invpurreqassetbreakdown->decision = isset($decision[$invpurreqassetbreakdown->decision_id]) ? $decision[$invpurreqassetbreakdown->decision_id] : '';
    $invpurreqassetbreakdown->breakdown_date = date('Y-m-d', strtotime($invpurreqassetbreakdown->breakdown_at));
    return $invpurreqassetbreakdown;
   });


  //$lastRequisition=$invpurreqitem->get(['inv_pur_req_paids.amount as req_amount']);



  $invpurreqpaid = $this->invpurreq
   ->join('inv_pur_req_paids', function ($join) {
    $join->on('inv_pur_reqs.id', '=', 'inv_pur_req_paids.inv_pur_req_id');
   })
   ->leftJoin('users', function ($join) {
    $join->on('users.id', '=', 'inv_pur_req_paids.user_id');
   })
   ->leftJoin('users as updated_user', function ($join) {
    $join->on('updated_user.id', '=', 'inv_pur_req_paids.updated_by');
   })
   ->leftJoin(\DB::raw("(SELECT 
            inv_pur_reqs.id as inv_pur_req_id,
            sum(inv_pur_req_paids.amount) as paid_amount
            FROM inv_pur_reqs
            join inv_pur_req_paids on inv_pur_reqs.id=inv_pur_req_paids.inv_pur_req_id
            where inv_pur_reqs.id =12
            GROUP BY
            inv_pur_reqs.id ) paid"), 'paid.inv_pur_req_id', '=', 'inv_pur_reqs.id')
   ->where([['inv_pur_reqs.id', '=', $id]])
   ->get([
    'inv_pur_reqs.id as inv_pur_req_id',
    'inv_pur_req_paids.user_id',
    'inv_pur_req_paids.amount as paid_amount',
    'inv_pur_req_paids.paid_date',
    'users.name as user_name',
    'updated_user.name as updatedby_user_name',
    'inv_pur_req_paids.updated_by',
    'inv_pur_req_paids.updated_at as entry_date',
   ])
   ->map(function ($invpurreqpaid) {
    $invpurreqpaid->paid_date = date('d-M-Y', strtotime($invpurreqpaid->paid_date));
    $invpurreqpaid->entry_date = date('d-M-Y', strtotime($invpurreqpaid->entry_date));
    return $invpurreqpaid;
   });

  $item_amount = $invpurreqitem->sum('item_amount');
  $paid_amount = $invpurreqpaid->sum('paid_amount');
  $amount = $item_amount - $paid_amount;
  $inword = Numbertowords::ntow(number_format($item_amount, 2, '.', ''), $row->currency_name);
  $invpurreqitem->inword = $inword;

  $pdf = new \Pdf('L', PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
  $header = ['logo' => $company->logo, 'address' => $company->address, 'title' => 'PURCHASE REQUISITION : ' . $invpurreq['remarks']];
  $pdf->setCustomHeader($header);
  $pdf->SetPrintHeader(true);
  //$pdf->SetPrintHeader(false);
  $pdf->SetPrintFooter(true);
  $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
  $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));
  $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);
  $pdf->SetMargins(10, 42, PDF_MARGIN_RIGHT);
  $pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
  $pdf->SetFooterMargin(PDF_MARGIN_FOOTER);
  $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);
  $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);
  $pdf->SetFont('helvetica', 'B', 12);
  $pdf->AddPage();
  $barcodestyle = array(
   'position' => '',
   'align' => 'C',
   'stretch' => false,
   'fitwidth' => true,
   'cellfitalign' => '',
   'border' => false,
   'hpadding' => 'auto',
   'vpadding' => 'auto',
   'fgcolor' => array(0, 0, 0),
   'bgcolor' => false, //array(255,255,255),
   'text' => true,
   'font' => 'helvetica',
   'fontsize' => 8,
   'stretchtext' => 4
  );
  $pdf->SetY(5);
  $pdf->SetX(190);
  $challan = str_pad($invpurreq['id'], 10, 0, STR_PAD_LEFT);
  $pdf->write1DBarcode(str_pad($challan, 10, 0, STR_PAD_LEFT), 'C39', '', '', '', 18, 0.4, $barcodestyle, 'N');
  $pdf->SetFont('helvetica', 'N', 10);
  /* $pdf->SetY(10);
        $txt = $prodgmtdlvinput['screenPrint']->supplier_name;
        $pdf->Write(0, 'Challan', '', 0, 'C', true, 0, false, false, 0);
        $pdf->SetY(5);
        $pdf->Write(0, $txt, '', 0, 'C', true, 0, false, false, 0);
        $pdf->SetFont('helvetica', '', 8);
        $pdf->SetTitle($txt); */
  $pdf->SetFont('helvetica', '', 8);
  $view = \View::make('Defult.Inventory.GeneralStore.InvPurReqPdf', ['invpurreq' => $invpurreq, 'invpurreqitem' => $invpurreqitem, 'invpurreqpaid' => $invpurreqpaid, 'paid_amount' =>
  $paid_amount, 'invpurreqassetbreakdown' => $invpurreqassetbreakdown]);
  $html_content = $view->render();
  $pdf->SetY(42);
  $pdf->WriteHtml($html_content, true, false, true, false, '');
  $filename = storage_path() . '/InvPurReqPdf.pdf';
  $pdf->output($filename);
  exit();
 }